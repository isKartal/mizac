# Generated by Django 5.1.6 on 2025-05-04 13:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('testing_algorithm', '0010_remove_recommendation_model'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.AddField(
            model_name='testresult',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.TextField()),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='content_images/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='testing_algorithm.category')),
                ('element_types', models.ManyToManyField(related_name='contents', to='testing_algorithm.elementtype')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_contents', to=settings.AUTH_USER_MODEL)),
                ('saved_by', models.ManyToManyField(blank=True, related_name='saved_contents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
